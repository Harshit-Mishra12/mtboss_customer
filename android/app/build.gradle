

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}


android {
    namespace "com.mtboss.user"
    compileSdkVersion 34
    ndkVersion "26.3.11579264"


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    aaptOptions {
        cruncherEnabled = false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.mtboss.user"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 10
        versionName "1.0.0"
        multiDexEnabled true
          ndk {
            abiFilters "arm64-v8a" // Only include required ABI
        }
    }
  signingConfigs {
    release {


        keyAlias 'keyalias'        // Replace with your actual key alias
        keyPassword 'mtboss' // Replace with your actual key password
        storeFile file('C:/Work/mtboss/fixit_user/fixit_user/release-key.jks') // Replace with the actual keystore path
        storePassword 'mtboss' // Replace with your actual store password
    }
}
    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.


            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            multiDexKeepProguard file('multidex-proguard-rules.pro')
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }


}

flutter {
    source '../..'
}

subprojects {
    project.configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.android.support'
                    && !details.requested.name.contains('multidex') ) {
                details.useVersion "27.1.1"
            }
            if (details.requested.group == 'androidx.core' &&
                    !details.requested.name.contains('androidx')) {
                details.useVersion "1.0.1"
            }
        }
    }
}


dependencies {
    implementation "androidx.activity:activity:1.9.0"
    implementation(platform("com.google.firebase:firebase-bom:32.8.1"))
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    implementation 'androidx.multidex:multidex:2.0.1'

    //  implementation "com.google.android.gms:play-services:12.0.1"
    implementation "com.google.android.gms:play-services-location:21.2.0"
    implementation "com.google.firebase:firebase-firestore:24.11.1"
    implementation "com.google.firebase:firebase-storage:20.3.0"
    implementation("com.google.android.gms:play-services-auth:20.5.0")
    implementation 'com.google.android.play:review:2.0.1'
    implementation 'com.google.android.play:review-ktx:2.0.1'
    implementation 'com.google.firebase:firebase-appcheck-safetynet:16.1.2'
    implementation 'com.google.firebase:firebase-appcheck-debug:16.0.0-beta01'
    implementation "androidx.fragment:fragment-ktx:1.3.6" // Last version supporting API 16
    implementation 'com.google.android.play:review:2.0.2'


}
